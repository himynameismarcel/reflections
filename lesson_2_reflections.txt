# 16.04.2017 - Reflection Notes No. 2
# Udacity Git and GitHub - Course

# Question: What happens when you initialize a repository? Why do you need to do it?

# My own thoughts on this:
Initializing a repository creates a hidden folder called .git which then allows the
user to track files by means of commit.
Without git init this repository will not be created and the files in a folder are
just ordinary files in an ordinary folder.



# Question: How is the staging area different from the working directory and the repository? What value do you think it offers?

# My own thoughts on this:
As far as I understood it, the staging area allows the user to decide which
files should be 'tracked' as part of the git-repository. As such, it is an
intermediate step that lets us easily manage files we want to ultimately commit
or decide not to commit.


# Question: How can you use the staging area to make sure you have one commit per logical change?

# My thoughts on this: The staging area is a preliminary stage before commiting
changes to files or reverting those changes and going back to the version a file
had before introducing any changes.
The staging area therefore should always be filled with the files that relate
to a logical change and then commited at once.


# Question: What are some situations when branches would be helpful in keeping your history organized? How would branches help?

# My thoughts on this: 
Branches allow us to depart from linear versioning into different 'branches' of
one and the same project. Each 'branch' has then again its own linear versioning
history and allows to work on versions that differ in the core but have
entirely different features or differ otherwise etc.